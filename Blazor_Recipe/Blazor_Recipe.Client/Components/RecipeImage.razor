@using Shared.Models

<div style="text-align: center" class="mud-border-primary border-2 pa-4">
    <MudText Typo="Typo.h4" Style="@($"color:var(--mud-palette-primary-darken);")">Render Mode: @RenderMode</MudText>

        @if (!showImage)
    {
        <MudButton IconSize="Size.Large" ButtonType="ButtonType.Button" OnClick="ButtonClick" Color="Color.Primary" Variant="Variant.Filled">Click me</MudButton>
    }
    else
    {
        <MudImage Class="recipe-image" Src="@Shared.HelperService.GetImageUrl(RecipeId)" Fluid="true" />
        <div Style="@($"color:var(--mud-palette-primary-lighten);")">
            <MudText Typo="Typo.h4"> Bon Appetit!</MudText>
            <MudText Typo="Typo.h5"> Enjoy your @RecipeName</MudText>
            </div>


    }

</div>
@code {
    [Parameter]
    public string RecipeName { get; set; }
    [Parameter]
    public int RecipeId { get; set; }
    [Parameter]
    public string RenderMode { get; set; }

    private bool showImage = false;

    protected override void OnParametersSet()
    {
        ArgumentNullException.ThrowIfNull(RecipeName);
        ArgumentNullException.ThrowIfNull(RecipeId);
        ArgumentNullException.ThrowIfNull(RenderMode);
    }

    private void ButtonClick()
    {
        Log.Logger.Information($"{DateTime.Now.ToLongTimeString()}: Clicking a button on render mode {@RenderMode}.");
        showImage = true;
    }

}
