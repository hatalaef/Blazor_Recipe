@using FluentValidation.Results

<MudGrid Class="pa-4 mud-height-full">

    <MudItem xs="12">
        <EditForm Model="@ingredientList" OnValidSubmit="@AddChips">
            <DataAnnotationsValidator />

            <MudGrid>
                <MudItem xs="8">
                    <MudTextField @bind-Value="ingredientList.SelectedIngredient" Label="Ingredient" Variant="Variant.Text"
                                  For="@(() => ingredientList.SelectedIngredient)" />
                </MudItem>
                <MudItem xs="4">
                    <MudButton ButtonType="ButtonType.Submit" Variant=" Variant.Text" Color="Color.Primary"
                               EndIcon="@Icons.Material.Filled.Add">
                        Add ingredient
                    </MudButton>
                </MudItem>
            </MudGrid>
        </EditForm>
    </MudItem>
    <MudItem xs="12">
        <MudChipSet AllClosable="true" OnClose="ClosedChips" @bind-Value="ingredientList">
            @foreach (string value in ingredientList.Ingredients)
            {
                <MudChip Text="@value" Color="Color.Primary" />
            }
        </MudChipSet>
    </MudItem>

    <MudItem xs="8"></MudItem>
    <MudItem xs="4">
        <MudButton Variant=" Variant.Filled" Color="Color.Primary" OnClick="@(() => SearchIngredients())">
            Search by ingredients
        </MudButton>
    </MudItem>

</MudGrid>


@code {
    private Shared.Models.IngredientList ingredientList = new()
        {
            Ingredients = new List<string> { },
            SelectedIngredient = string.Empty
        };

    [Parameter]
    public EventCallback<List<string>> SearchIngredientsCallback { get; set; }

    private async Task SearchIngredients()
    {
        await SearchIngredientsCallback.InvokeAsync(ingredientList.Ingredients.ToList());
    }
    private async Task AddChips()
    {
        Console.WriteLine($"selected: {ingredientList.SelectedIngredient}");

        ingredientList.Ingredients.Add(ingredientList.SelectedIngredient);
        ingredientList.SelectedIngredient = string.Empty;

        Console.WriteLine($"chip values: {string.Join(";", ingredientList.Ingredients.Select(x => x))}");
    }
    private void ClosedChips(MudChip chip)
    {
        ingredientList.Ingredients.Remove(chip.Text);
    }

}
