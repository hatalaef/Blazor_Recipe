@page "/"
@inject Shared.RecipeService RecipeService
<PageTitle>Home</PageTitle>

@attribute [RenderModeInteractiveServer]
@attribute [StreamRendering(true)]

<MudContainer MaxWidth="MaxWidth.Large">

    <RecipeSearch SearchIngredientsCallback="@GetRecipes" />
    <div class="mt-8" />
    @if (_recipes is null)
    {
        <MudText Typo="Typo.h5">Loading Recipes...</MudText>
    }
    else
    {

        @foreach (var recipe in _recipes)
        {
            <div class="mt-4">
                <RecipeCard Recipe="recipe" />
            </div>
        }
    }
</MudContainer>

@code {
    private IEnumerable<Shared.Models.Recipe>? _recipes;

    protected override async Task OnInitializedAsync()
    {
        _recipes = Enumerable.Empty<Shared.Models.Recipe>();
    }

    private async Task GetRecipes(List<string> ingredients)
    {
        Console.WriteLine($"{nameof(GetRecipes)}: Got ingredients: {string.Join(";", ingredients)}");
        _recipes = null;
        _recipes = (await RecipeService.GetRecipesAsync_Fake(ingredients)).ToList();
        //_recipes = (await RecipeService.GetRecipesAsync(ingredients)).ToList();

    }
}
